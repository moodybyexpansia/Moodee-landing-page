---
// Activez le mode SSR en Astro
export const prerender = false;

import Layout from "@/layouts/Layout.astro";
import { calculateReadingTime, portableTextToPlainText } from "@/lib/utils";
import { type ArticleType } from "@/types/sanityTypes";
import { sanityClient } from "sanity:client";

const NEWSLETTERS_QUERY = `*[
  _type == "newsletter"
  && defined(slug.current)
]|order(publishedAt desc){
 ...,
   "imageUrl": image.asset->url 
}`;

// Récupérez les données à la demande
const newsletters = await sanityClient.fetch<ArticleType[]>(NEWSLETTERS_QUERY);

const bgColors = [
  "bg-green-light",
  "bg-orange-light",
  "bg-purple-light",
  "bg-blue-light",
];
const getColorClass = (index: number) => {
  const bgColor = bgColors[index % bgColors.length];
  return bgColor;
};
---

<Layout title="Newsletters">
  <section class="mx-auto w-11/12 max-w-7xl space-y-12 py-12 md:py-16 lg:py-20">
    <div
      class="rounded-[3rem] bg-[url('/moodee-bg-blog.png')] bg-center py-8 text-center"
    >
      <h1 class="mb-4 text-center text-5xl font-bold">Lire nos newsletters</h1>
      <p class="font-bold">
        Restez au courant des dernières nouveautés de Moodee
      </p>
      <p class="mx-auto max-w-3xl text-sm text-gray-500">
        Ici, suivez nos newsletters pour rester au courant des dernières
        nouveautés de Moodee.
      </p>
    </div>

    <div class="grid gap-6 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4">
      {
        newsletters
          .sort(
            (a, b) => new Date(b.date).getTime() - new Date(a.date).getTime(),
          )
          .map((newsletter, index) => {
            // Obtenez la classe de couleur basée sur l'index
            const bgColor = getColorClass(index);

            return (
              <a
                href={"/resources/newsletters/" + newsletter.slug.current}
                class={`space-y-2 rounded-3xl transition-all hover:translate-x-2 ${bgColor}`}
              >
                {newsletter.imageUrl && (
                  <img
                    src={newsletter.imageUrl}
                    alt={newsletter.title}
                    class="h-32 w-full rounded-3xl object-cover"
                    loading="lazy"
                  />
                )}
                <div class="px-4 py-3">
                  <p class="mb-1 mt-2 font-sans text-xl font-semibold leading-tight">
                    {newsletter.title}
                  </p>
                  <div class="text-s font-normal">
                    {new Date(newsletter.date).toLocaleDateString("fr-FR", {
                      year: "numeric",
                      month: "long",
                      day: "numeric",
                    })}
                    {" • "}
                    {calculateReadingTime(
                      portableTextToPlainText(newsletter.content),
                    ) + " min de lecture"}
                  </div>
                </div>
              </a>
            );
          })
      }
    </div>
  </section>
</Layout>
