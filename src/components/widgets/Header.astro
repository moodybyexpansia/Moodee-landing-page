---
import { ArrowUpRight } from "lucide-react";

const links = [
  {
    text: "Home",
    href: "/",
  },
  { text: "Pricing", href: "/#pricing" },
  { text: "Resources", href: "/resources" },
];
---

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const header = document.querySelector("#header");
    const openMenuButton = document.querySelector("[data-open-menu]");
    const mainNav = document.getElementById("main-nav");
    const mobileNav = document.getElementById("mobile-nav");
    const textElements = document.querySelectorAll("[data-text-dark]");
    const borderElements = document.querySelectorAll("[data-border-dark]");
    const logoBlue = document.querySelector("[data-logo-blue]");
    const logoWhite = document.querySelector("[data-logo-white]");
    const moodeeTitle = document.querySelector("[data-moodee-title]");

    // Utilitaires pour ajouter et supprimer des classes
    const addClasses = (element, classes) => element.classList.add(...classes);
    const removeClasses = (element, classes) =>
      element.classList.remove(...classes);

    // Gérer le défilement et les styles du header
    const handleScroll = () => {
      const scrolled = window.scrollY > 60;

      // Header styles
      const headerClasses = [
        "bg-white/90",
        "backdrop-blur-lg",
        "shadow-[0_0.375rem_1.5rem_0_rgba(0,0,0,0.1)]",
      ];
      scrolled
        ? addClasses(header, headerClasses)
        : removeClasses(header, headerClasses);

      // Texte et bordures
      textElements.forEach((el) =>
        scrolled
          ? (addClasses(el, ["text-dark"]), removeClasses(el, ["text-white"]))
          : (addClasses(el, ["text-white"]), removeClasses(el, ["text-dark"])),
      );
      borderElements.forEach((el) =>
        scrolled
          ? (addClasses(el, ["border-dark"]),
            removeClasses(el, ["border-white"]))
          : (addClasses(el, ["border-white"]),
            removeClasses(el, ["border-dark"])),
      );

      // Logos
      scrolled
        ? addClasses(logoWhite, ["hidden"])
        : removeClasses(logoWhite, ["hidden"]);
      scrolled
        ? removeClasses(logoBlue, ["hidden"])
        : addClasses(logoBlue, ["hidden"]);

      // Moodee Title
      scrolled
        ? (addClasses(moodeeTitle, ["text-blue"]),
          removeClasses(moodeeTitle, ["text-white"]))
        : (addClasses(moodeeTitle, ["text-white"]),
          removeClasses(moodeeTitle, ["text-blue"]));
    };

    // Ouvrir le menu mobile
    const openMenu = () => {
      addClasses(document.body, ["overflow-hidden"]);
      addClasses(header, ["h-screen", "bg-white/90"]);
      addClasses(mainNav, ["hidden"]);
      removeClasses(mainNav, ["flex"]);
      removeClasses(mobileNav, ["hidden"]);
      addClasses(mobileNav, [
        "flex",
        "flex-col",
        "items-start",
        "justify-start",
      ]);

      // Écouteur pour clic en dehors
      document.addEventListener("click", handleOutsideClick);
    };

    // Fermer le menu mobile
    const closeMenu = () => {
      removeClasses(document.body, ["overflow-hidden"]);
      removeClasses(header, ["h-screen", "bg-white/90"]);
      removeClasses(mainNav, ["hidden"]);
      addClasses(mainNav, ["flex"]);
      addClasses(mobileNav, ["hidden"]);

      // Retirer l'écouteur pour clic en dehors
      document.removeEventListener("click", handleOutsideClick);
    };

    // Gestion des clics en dehors du menu
    const handleOutsideClick = (event) => {
      if (
        !mobileNav.contains(event.target) &&
        !openMenuButton.contains(event.target)
      ) {
        closeMenu();
      }
    };

    // Ajout des événements
    openMenuButton.addEventListener("click", openMenu);
    mobileNav.addEventListener("click", closeMenu);
    window.addEventListener("scroll", handleScroll);

    // Initialisation
    handleScroll();
  });
</script>

<header
  id="header"
  class="sticky top-0 z-40 mx-auto w-full flex-shrink-0 transition-all ease-in-out"
>
  <!-- Main Navigation -->
  <div
    class="mx-auto flex h-[4.5rem] w-11/12 max-w-7xl items-center"
    id="main-nav"
  >
    <div class="flex w-full items-center justify-between md:w-fit">
      <a class="flex items-center" href="/">
        <div class="flex items-center gap-2 text-2xl font-bold" data-text-dark>
          <img
            src="/logo-white.png"
            class="size-8"
            alt="Moodee logo"
            data-logo-white
          />
          <img
            src="/logo-blue.png"
            class="size-8"
            alt="Moodee logo"
            data-logo-blue
          />
          <h3 data-moodee-title>Moodee</h3>
        </div>
      </a>

      <!-- Mobile Menu Button -->
      <div class="flex items-center md:hidden">
        <button
          type="button"
          class="group flex h-8 w-8 cursor-pointer flex-col items-center justify-center rounded"
          data-open-menu
        >
          <span
            class="ease my-1 h-0.5 w-6 transform rounded-full bg-black opacity-80 transition duration-200 group-[.expanded]:translate-y-2.5 group-[.expanded]:rotate-45"
          ></span>
          <span
            class="ease my-1 h-0.5 w-6 transform rounded-full bg-black opacity-80 transition duration-200 group-[.expanded]:opacity-0"
          ></span>
          <span
            class="ease my-1 h-0.5 w-6 transform rounded-full bg-black opacity-80 transition duration-200 group-[.expanded]:-translate-y-2.5 group-[.expanded]:-rotate-45"
          ></span>
        </button>
      </div>
    </div>

    <nav
      class="text-default hidden w-full items-center overflow-y-auto overflow-x-hidden md:mx-5 md:flex md:w-auto md:justify-self-center md:overflow-x-auto md:overflow-y-visible"
      aria-label="Main navigation"
    >
      <ul
        class="flex w-full flex-col font-medium md:flex-row md:justify-center md:gap-12"
      >
        {
          links.map(({ text, href }) => (
            <li>
              <a
                href={href}
                class="whitespace-no-wrap block text-white hover:text-dark"
                data-text-dark
              >
                {text}
              </a>
            </li>
          ))
        }
      </ul>
    </nav>

    <div class="ml-auto hidden items-center justify-end md:flex md:gap-4">
      <a href="#pricing">
        <button
          class="rounded-xl border-2 border-blue bg-blue px-5 py-2 text-white ring-0 transition-colors hover:bg-blue/90"
        >
          Obtenir une démo
        </button>
      </a>
      <a href="https://moodee.app/" target="_blank">
        <button
          class="flex items-center gap-2 rounded-xl border-2 border-blue px-5 py-2 text-blue ring-0 transition-colors"
        >
          Moodee.app
          <ArrowUpRight strokeWidth={3} className="size-6" />
        </button>
      </a>
    </div>
  </div>

  <!-- Mobile Navigation -->
  <div class="mx-auto mt-5 hidden h-full w-11/12 space-y-8" id="mobile-nav">
    <div class="flex w-full items-center justify-between md:w-fit">
      <a class="flex items-center" href="/">
        <div class="flex items-center gap-2 text-2xl font-bold">
          <img src="/logo-blue.png" class="size-8" alt="Moodee logo" />
          <h3 class="text-blue">Moodee</h3>
        </div>
      </a>

      <!-- Mobile Menu Button -->
      <div class="flex items-center md:hidden">
        <button
          type="button"
          class="group flex h-8 w-8 cursor-pointer flex-col items-center justify-center rounded"
          data-close-menu
        >
          <span
            class="ease my-1 h-0.5 w-6 translate-y-2.5 rotate-45 transform rounded-full bg-black opacity-80 transition duration-200"
          ></span>
          <span
            class="ease my-1 h-0.5 w-6 transform rounded-full bg-black opacity-0 transition duration-200"
          ></span>
          <span
            class="ease my-1 h-0.5 w-6 -translate-y-2.5 -rotate-45 transform rounded-full bg-black opacity-80 transition duration-200"
          ></span>
        </button>
      </div>
    </div>

    <ul
      class="flex w-full flex-col items-start gap-4 border-b border-gray-200 pb-8 font-medium"
    >
      {
        links.map(({ text, href }) => (
          <li>
            <a
              href={href}
              class="whitespace-no-wrap text-2xl font-bold text-dark hover:text-blue"
            >
              {text}
            </a>
          </li>
        ))
      }
    </ul>

    <div>
      <a href="#pricing">
        <button
          class="mb-2 w-44 rounded-xl border-2 border-blue bg-blue px-5 py-2 text-center text-white ring-0 transition-colors hover:bg-blue/90"
        >
          Obtenir une démo
        </button>
      </a>
      <a href="https://moodee.app/" target="_blank">
        <button
          class="flex w-44 items-center justify-center gap-2 rounded-xl border-2 border-blue px-5 py-2 text-center text-blue ring-0 transition-colors"
        >
          Moodee.app
          <ArrowUpRight strokeWidth={3} className="size-6" />
        </button>
      </a>
    </div>
  </div>
</header>
