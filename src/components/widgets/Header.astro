---
import { ArrowUpRight } from "lucide-react";

const links = [
  {
    text: "Home",
    href: "/",
  },
  { text: "Pricing", href: "/#pricing" },
  { text: "Resources", href: "/resources" },
];
---

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const header = document.querySelector("#header") as HTMLElement;
    const openMenuButton = document.querySelector(
      "[data-open-menu]",
    ) as HTMLElement | null;
    const mainNav = document.getElementById("main-nav") as HTMLElement | null;
    const mobileNav = document.getElementById(
      "mobile-nav",
    ) as HTMLElement | null;
    const textElements = document.querySelectorAll(
      "[data-text-dark]",
    ) as NodeListOf<HTMLElement>;
    const borderElements = document.querySelectorAll(
      "[data-border-dark]",
    ) as NodeListOf<HTMLElement>;
    const logoBlue = document.querySelector(
      "[data-logo-blue]",
    ) as HTMLElement | null;
    const logoWhite = document.querySelector(
      "[data-logo-white]",
    ) as HTMLElement | null;
    const moodeeTitle = document.querySelector(
      "[data-moodee-title]",
    ) as HTMLElement | null;

    // Vérification des éléments requis
    if (!header || !openMenuButton || !mainNav || !mobileNav) {
      console.error("Required elements are missing from the DOM.");
      return;
    }

    // Détection de la page d'accueil avec l'URL
    const isHomePage =
      window.location.pathname === "/" ||
      window.location.pathname === "/index.html";

    // Utilitaire pour basculer des classes
    const toggleClasses = (
      element: HTMLElement,
      classesToAdd: string[],
      classesToRemove: string[],
    ) => {
      element.classList.add(...classesToAdd);
      element.classList.remove(...classesToRemove);
    };

    // Appliquer les styles de l'état scrolled
    const applyScrolledStyles = () => {
      const scrolledClasses = [
        "bg-white/90",
        "backdrop-blur-lg",
        "shadow-[0_0.375rem_1.5rem_0_rgba(0,0,0,0.1)]",
      ];
      toggleClasses(header, scrolledClasses, []);

      textElements.forEach((el) =>
        toggleClasses(el, ["text-dark"], ["text-white"]),
      );
      borderElements.forEach((el) =>
        toggleClasses(el, ["border-dark"], ["border-white"]),
      );

      toggleClasses(logoWhite!, ["hidden"], []);
      toggleClasses(logoBlue!, [], ["hidden"]);
      toggleClasses(moodeeTitle!, ["text-blue"], ["text-white"]);
    };

    // Réinitialiser les styles (état non scrolled)
    const resetScrolledStyles = () => {
      const scrolledClasses = [
        "bg-white/90",
        "backdrop-blur-lg",
        "shadow-[0_0.375rem_1.5rem_0_rgba(0,0,0,0.1)]",
      ];
      toggleClasses(header, [], scrolledClasses);

      textElements.forEach((el) =>
        toggleClasses(el, ["text-white"], ["text-dark"]),
      );
      borderElements.forEach((el) =>
        toggleClasses(el, ["border-white"], ["border-dark"]),
      );

      toggleClasses(logoWhite!, [], ["hidden"]);
      toggleClasses(logoBlue!, ["hidden"], []);
      toggleClasses(moodeeTitle!, ["text-white"], ["text-blue"]);
    };

    // Gérer le défilement uniquement sur la page d'accueil
    const handleScroll = () => {
      if (!isHomePage) return;
      const scrolled = window.scrollY > 60;
      scrolled ? applyScrolledStyles() : resetScrolledStyles();
    };

    // Gérer le menu mobile
    const openMenu = () => {
      toggleClasses(document.body, ["overflow-hidden"], []);
      toggleClasses(header, ["h-screen", "bg-white/90"], []);
      toggleClasses(mainNav, ["hidden"], ["flex"]);
      toggleClasses(mobileNav, ["flex"], ["hidden"]);
      openMenuButton.setAttribute("aria-expanded", "true");
    };

    const closeMenu = () => {
      toggleClasses(document.body, [], ["overflow-hidden"]);
      toggleClasses(header, [], ["h-screen", "bg-white/90"]);
      toggleClasses(mainNav, ["flex"], ["hidden"]);
      toggleClasses(mobileNav, ["hidden"], ["flex"]);
      openMenuButton.setAttribute("aria-expanded", "false");
    };

    // Gestion des clics en dehors
    document.addEventListener("click", (event) => {
      const target = event.target;
      if (target instanceof Node) {
        const isOutside =
          !mobileNav.contains(target) && !openMenuButton.contains(target);

        if (isOutside && mobileNav.classList.contains("flex")) {
          closeMenu();
        }
      }
    });

    // Initialisation au chargement
    if (!isHomePage) {
      applyScrolledStyles();
    } else {
      handleScroll();
      window.addEventListener("scroll", handleScroll);
    }

    openMenuButton.addEventListener("click", openMenu);
    mobileNav.addEventListener("click", closeMenu);
  });
</script>

<header
  id="header"
  class="sticky top-0 z-40 mx-auto w-full flex-shrink-0 transition-all ease-in-out"
>
  <!-- Main Navigation -->
  <div
    class="mx-auto flex h-[4.5rem] w-11/12 items-center lg:gap-12"
    id="main-nav"
  >
    <div class="flex w-full items-center justify-between lg:w-fit">
      <a class="flex items-center" href="/">
        <div class="flex items-center gap-2 text-2xl font-bold" data-text-dark>
          <img
            src="/logo-white.png"
            class="size-8"
            alt="Moodee logo"
            data-logo-white
          />
          <img
            src="/logo-blue.png"
            class="hidden size-8"
            alt="Moodee logo"
            data-logo-blue
          />
          <h3 data-moodee-title class="transition-colors">Moodee</h3>
        </div>
      </a>

      <!-- Mobile Menu Button -->
      <div class="flex items-center lg:hidden">
        <button
          type="button"
          class="group flex h-8 w-8 cursor-pointer flex-col items-center justify-center rounded"
          data-open-menu
          aria-expanded="false"
        >
          <span
            class="ease my-1 h-0.5 w-6 transform rounded-full bg-black opacity-80 transition duration-200"
          ></span>
          <span
            class="ease my-1 h-0.5 w-6 transform rounded-full bg-black opacity-80 transition duration-200"
          ></span>
          <span
            class="ease my-1 h-0.5 w-6 transform rounded-full bg-black opacity-80 transition duration-200"
          ></span>
        </button>
      </div>
    </div>

    <nav
      class="text-default hidden w-full items-center overflow-y-auto overflow-x-hidden lg:mx-5 lg:flex lg:w-auto lg:justify-self-center lg:overflow-x-auto lg:overflow-y-visible"
      role="navigation"
      aria-label="Main navigation"
    >
      <ul
        class="flex w-full flex-col font-medium lg:flex-row lg:justify-center lg:gap-12"
      >
        {
          links.map(({ text, href }) => (
            <li>
              <a
                href={href}
                class="whitespace-no-wrap block text-white"
                data-text-dark
              >
                {text}
              </a>
            </li>
          ))
        }
      </ul>
    </nav>

    <div class="ml-auto hidden items-center justify-end lg:flex lg:gap-4">
      <a
        href="https://kgiknx4xq2i.typeform.com/to/tvtyFXT3?typeform-source=moodee.eu"
        target="_blank"
        class="rounded-xl border-2 border-blue bg-blue px-5 py-2 text-white ring-0 transition-colors hover:bg-blue/90"
      >
        Obtenir une démo
      </a>
      <a href="https://moodee.app/" target="_blank">
        <button
          class="flex items-center gap-2 rounded-xl border-2 border-blue px-5 py-2 text-blue ring-0 transition-colors"
        >
          Moodee.app
          <ArrowUpRight strokeWidth={3} className="size-6" />
        </button>
      </a>
    </div>
  </div>

  <!-- Mobile Navigation -->
  <div
    class="mx-auto mt-5 hidden h-full w-11/12 flex-col space-y-8"
    id="mobile-nav"
  >
    <div class="flex w-full items-center justify-between">
      <a class="flex items-center" href="/">
        <div class="flex items-center gap-2 text-2xl font-bold">
          <img src="/logo-blue.png" class="size-8" alt="Moodee logo" />
          <h3 class="text-blue">Moodee</h3>
        </div>
      </a>
      <div class="flex items-center lg:hidden">
        <button
          type="button"
          class="group flex h-8 w-8 cursor-pointer flex-col items-center justify-center rounded"
          data-close-menu
        >
          <span
            class="ease my-1 h-0.5 w-6 translate-y-2.5 rotate-45 transform rounded-full bg-black opacity-80 transition duration-200"
          ></span>
          <span
            class="ease my-1 h-0.5 w-6 transform rounded-full bg-black opacity-0 transition duration-200"
          ></span>
          <span
            class="ease my-1 h-0.5 w-6 -translate-y-2.5 -rotate-45 transform rounded-full bg-black opacity-80 transition duration-200"
          ></span>
        </button>
      </div>
    </div>

    <ul
      class="flex w-full flex-col items-start gap-4 border-b border-gray-200 pb-8 font-medium"
    >
      {
        links.map(({ text, href }) => (
          <li>
            <a
              href={href}
              class="whitespace-no-wrap text-2xl font-bold text-dark hover:text-blue"
            >
              {text}
            </a>
          </li>
        ))
      }
    </ul>

    <div class="flex flex-col gap-2">
      <a
        href="https://kgiknx4xq2i.typeform.com/to/tvtyFXT3?typeform-source=moodee.eu"
        target="_blank"
        class="w-44 rounded-xl border-2 border-blue bg-blue px-5 py-2 text-center text-white ring-0 transition-colors hover:bg-blue/90"
      >
        Obtenir une démo
      </a>
      <a href="https://moodee.app/" target="_blank">
        <button
          class="flex w-44 items-center justify-center gap-2 rounded-xl border-2 border-blue px-5 py-2 text-center text-blue ring-0 transition-colors"
        >
          Moodee.app
        </button>
      </a>
    </div>
  </div>
</header>
