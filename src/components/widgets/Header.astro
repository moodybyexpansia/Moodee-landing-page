---
import type { HTMLAttributes } from "astro/types";
import { ArrowUpRight, ChevronDown, CircleArrowOutUpRight, SquareArrowOutUpRight } from "lucide-react";
import { Button } from "../ui/button";

// Appelle la fonction d'initialisation après que le DOM est chargé

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface MenuLink extends Link {
  links?: Array<MenuLink>;
}


export interface Props {
  links?: Array<MenuLink>;
}

const { links = [] } = Astro.props;
---

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const header = document.querySelector("#header");
    const toggleMenuButton = document.querySelector("[data-toggle-menu]");
    const nav = document.querySelector("#header nav");
    const lastChildDiv = document.querySelector("#header > div > div:last-child");
    const textElements = document.querySelectorAll("[data-text-dark]"); // Tous les éléments ciblés

    // Gérer le défilement et les styles du header
    const handleScroll = () => {
      if (window.scrollY > 60) {
        header?.classList.add("scroll");
        textElements.forEach((el) => {
          el.classList.remove("text-white");
          el.classList.add("text-dark");
        });
      } else {
        header?.classList.remove("scroll");
        textElements.forEach((el) => {
          el.classList.remove("text-dark");
          el.classList.add("text-white");
        });
      }
    };

    // Toggle menu lors d'un clic sur le bouton
    const toggleMenu = () => {
      const isExpanded = toggleMenuButton?.classList.toggle("expanded");
      document.body.classList.toggle("overflow-hidden", isExpanded);
      header?.classList.toggle("h-screen", isExpanded);
      header?.classList.toggle("expanded", isExpanded);
      header?.classList.toggle("bg-page", isExpanded);
      nav?.classList.toggle("hidden", !isExpanded);
      lastChildDiv?.classList.toggle("hidden", !isExpanded);
    };

    // Fermer le menu lors d'un clic sur la navigation
    const closeMenu = () => {
      toggleMenuButton?.classList.remove("expanded");
      document.body.classList.remove("overflow-hidden");
      header?.classList.remove("h-screen", "expanded", "bg-page");
      nav?.classList.add("hidden");
      lastChildDiv?.classList.add("hidden");
    };

    // Écouteurs d'événements
    toggleMenuButton?.addEventListener("click", toggleMenu);
    nav?.addEventListener("click", closeMenu);
    window.addEventListener("scroll", handleScroll);

    // Initialisation
    handleScroll();
  });
</script>

<header
  id="header"
  class="sticky flex-shrink-0 top-0 z-40 mx-auto w-full flex-none border-b border-gray-50/0 transition-[opacity] ease-in-out"
  data-sticky-header
>
  <div
    class="relative mx-auto w-11/12 max-w-7xl h-[4.5rem] flex items-center"
  >
    <!-- Logo -->
    <div class="flex w-full md:w-fit items-center justify-between">
      <a class="flex items-center" href="/">
        <div
          class="flex items-center gap-2 text-2xl font-bold text-white"
          data-text-dark
        >
          <img src="/moodee-v1.png" class="size-8" alt="Moodee logo" />
          <h3>Moodee</h3>
        </div>
      </a>
      <!-- Mobile Menu Button -->
      <div class="flex items-center md:hidden">
        <button
          type="button"
          class="group flex h-8 w-8 cursor-pointer flex-col items-center justify-center rounded"
          data-toggle-menu
        >
          <span
            class="ease my-1 h-0.5 w-6 transform rounded-full bg-black opacity-80 transition duration-200 group-[.expanded]:translate-y-2.5 group-[.expanded]:rotate-45 dark:bg-white"
          ></span>
          <span
            class="ease my-1 h-0.5 w-6 transform rounded-full bg-black opacity-80 transition duration-200 group-[.expanded]:opacity-0 dark:bg-white"
          ></span>
          <span
            class="ease my-1 h-0.5 w-6 transform rounded-full bg-black opacity-80 transition duration-200 group-[.expanded]:-translate-y-2.5 group-[.expanded]:-rotate-45 dark:bg-white"
          ></span>
        </button>
      </div>
    </div>

    <!-- Navigation -->
    <nav
      class="hidden items-start md:flex ml-12 md:gap-12"
      aria-label="Main navigation"
    >
      <ul
        class="flex w-full flex-col font-medium md:gap-12 md:flex-row md:justify-center"
      >
        {
          links.map(({ text, href, links }) => (
            <li>
              <a
                href={href}
                class='text-white hover:text-dark block whitespace-no-wrap',
                data-text-dark
              >
                {text}
              </a>
            </li>
          ))
        }
      </ul>
    </nav>

    <!-- Actions -->
    <div class="hidden ml-auto items-center justify-end md:flex md:gap-4">
      <a href="#pricing">
        <button class="rounded-xl px-5 py-2 ring-0 border-2 border-green bg-green text-white transition-colors">Obtenir une démo</button> 
      </a>
      <a href="https://moodee.app/">
        <button class="rounded-xl flex items-center gap-2 px-5 py-2 ring-0 border-2 border-white text-white transition-colors" data-text-dark>
          Moodee.app
          <ArrowUpRight strokeWidth={3} className="size-6" /> </button> 
      </a>  
    </div>
  </div>
</header>
