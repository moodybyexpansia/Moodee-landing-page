---
import { Check, Crown, Star, Wrench } from "lucide-react";
import { Button } from "../ui/button";

const plans: {
  shortTitle: "starter" | "pro" | "premium";
  title: string;
  subtitle: string;
  price: number;
  highlight: boolean;
  items: { description: string }[];
}[] = [
  {
    shortTitle: "starter",
    title: "Moodee Start : Pour une stratégie digitale accessible",
    subtitle: "Idéal pour les petites entreprises",
    price: 99,
    highlight: false,
    items: [
      { description: "Écoute des réseaux sociaux, médias, avis clients" },
      { description: "IA illimitée de Moodee (ChatBot, Tableaux, Graphiques)" },
      { description: "Paramétrez jusqu’à 3 focus en simultané" },
    ],
  },
  {
    shortTitle: "pro",
    title: "Moodee Pro : Boostez votre veille concurrentielle",
    subtitle: "Parfait pour les PME ambitieuses",
    price: 299,
    highlight: true,
    items: [
      { description: "Écoute des réseaux sociaux, médias, avis clients" },
      { description: "IA illimitée de Moodee (ChatBot, Tableaux, Graphiques)" },
      { description: "Paramétrez jusqu’à 12 focus en simultané" },
    ],
  },
  {
    shortTitle: "premium",
    title: "Moodee Premium : Une solution marketing sur mesure",
    subtitle: "Personnalisé pour les grandes entreprises",
    highlight: false,
    price: 0,
    items: [
      { description: "Écoute des réseaux sociaux, médias, avis clients" },
      { description: "IA illimitée de Moodee (ChatBot, Tableaux, Graphiques)" },
      { description: "Nombre de focus simultanés sur mesure" },
    ],
  },
];

const planStyles: Record<
  "starter" | "pro" | "premium",
  {
    textColor: string;
    bgColor: string;
    hoverBgColor: string;
    lightBgColor: string;
  }
> = {
  starter: {
    textColor: "text-orange",
    bgColor: "bg-orange",
    hoverBgColor: "hover:shadow-orange-light",
    lightBgColor: "bg-orange-light",
  },
  pro: {
    textColor: "text-green",
    bgColor: "bg-green",
    hoverBgColor: "hover:shadow-green-light",
    lightBgColor: "bg-green-light",
  },
  premium: {
    textColor: "text-purple",
    bgColor: "bg-purple",
    hoverBgColor: "hover:shadow-purple-light",
    lightBgColor: "bg-purple-light ",
  },
};
---

<section id="pricing" class="md-py-16 mx-auto w-11/12 max-w-7xl py-12 lg:py-20">
  <h2
    class="relative mb-12 w-fit text-center text-5xl font-bold md:mx-auto md:mb-24"
  >
    Nos plans tarifaires...
    <span class="absolute -bottom-4 right-8 h-1.5 w-1/2 bg-blue"></span>
  </h2>

  <div class="flex items-stretch justify-center">
    <div class="grid grid-cols-1 gap-8 md:grid-cols-3">
      {
        plans.map(
          ({ shortTitle, title, subtitle, highlight, price, items }) => {
            const styles = planStyles[shortTitle]; // Récupérer les styles par titre
            return (
              <div
                class={`group relative flex flex-col justify-between rounded-3xl border border-gray-200 bg-white p-8 shadow-md hover:cursor-pointer hover:shadow-full ${styles.hoverBgColor}`}
              >
                {highlight && (
                  <div class="absolute right-[-5px] top-[-5px] z-[1] h-[100px] w-[100px] overflow-hidden text-right">
                    <span class="absolute right-[-21px] top-[19px] block w-full rotate-45 bg-blue text-center text-[10px] font-bold leading-5 text-white shadow-[0_3px_10px_-5px_rgba(0,0,0,0.3)]">
                      Best seller
                    </span>
                  </div>
                )}
                <div class="flex items-center gap-3">
                  <div
                    class={`flex items-center justify-center rounded-xl ${styles.lightBgColor} p-3 ${styles.textColor}`}
                  >
                    {shortTitle === "starter" && (
                      <Star className={`size-8 ${styles.textColor}`} />
                    )}
                    {shortTitle === "pro" && (
                      <Crown className={`size-8 ${styles.textColor}`} />
                    )}
                    {shortTitle === "premium" && (
                      <Wrench className={`size-8 ${styles.textColor}`} />
                    )}
                  </div>
                  <div>
                    <h4 class="text-sm font-light text-gray-400">{subtitle}</h4>
                    <h3 class="text-lg font-bold leading-5">{title}</h3>
                  </div>
                </div>

                <div class="my-8 flex items-center">
                  {price > 0 ? (
                    <>
                      <span class="text-5xl font-extrabold">{price}</span>
                      <span class="text-xl">€</span>
                      <span class="text-base font-medium">/mois</span>
                    </>
                  ) : (
                    <span class="text-xl font-extrabold">Sur mesure</span>
                  )}
                </div>

                <p class="mb-2 font-bold">Ce qui est inclus :</p>
                <ul class="space-y-4 text-left">
                  {items.map(({ description }) => (
                    <li class="flex items-center gap-2 text-gray-500">
                      <div class={`rounded-full p-1 ${styles.bgColor}`}>
                        <Check className="size-4 text-white" />
                      </div>
                      <span>{description}</span>
                    </li>
                  ))}
                </ul>

                <Button
                  className={`mt-6 ${styles.bgColor} hover:${styles.bgColor}`}
                >
                  Essayer 7 jours
                </Button>
              </div>
            );
          },
        )
      }
    </div>
  </div>
</section>
